<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
       <!--扫描类包，讲标注spring注解的类自动转化为Bean，同时完成Bean的注入-->
       <context:component-scan base-package="dao"/>
        
        <!-- 扫描com.vehicle.service包下所有标注@Service的服务组件 -->
        <context:component-scan base-package="service"/>
        
        
        
 	<!--②事务管理器-器-->
	<bean id="transactionManager"
		  class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		  p:sessionFactory-ref="sessionFactory" />
     
        <!--③使用强大的切点表达式语言轻松定义目标方法-->
	<aop:config>
	    <!--③-1通过aop定义事务增强切面-->
		<aop:pointcut id="serviceMethod"
			expression="execution(* service.*Service.*(..))" />
		 <!--③-2引用事务增强-->
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>
	
	<!--④事务增强-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		 <!--④-1事务属性定义-->
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
        
        <!--⑤ 基于EHCache的系统缓存管理器-->
        <bean id="cacheManager"
              class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
              p:configLocation="/WEB-INF/ehcache.xml"/>
        <!--定义一个使用DBCP实现的数据源-->
        <!--① 引入定义JDBC连接的属性文件-->
        <context:property-placeholder location="/WEB-INF/jdbc.properties"/>
	
	<!--② 定义一个数据源-->
	<bean id="dataSource"
            class="org.apache.commons.dbcp.BasicDataSource"
            destroy-method="close"
	    p:driverClassName="${jdbc.driverClassName}"
	    p:url="${jdbc.url}"
	    p:username="${jdbc.username}"
	    p:password="${jdbc.password}" />
        
        <!--③ 定义Hibernate的Session工厂-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
            <property name="dataSource">
                 <ref bean="dataSource"/>
            </property>
           <!--③-1 扫描基于JPA注解PO类目录-->
	    <property name="packagesToScan">
                <list>
                    <value>entity</value>
                </list>
            </property>
        <!--③-2 指定Hibernate的属性信息-->
		<property name="hibernateProperties">
			<props>
			    <!--③-2-1 指定数据库的类型为MySQL-->   
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<!--③-2-2 在提供数据库操作里显示SQL，方便开发期的调试，在部署时应该将其设计为false-->
				<prop key="hibernate.show_sql">true</prop>
				<!--③-2-3 使用EHCache缓存实现方案-->  
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.EhCacheProvider
				</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
			</props>
		</property>
		<!--③-3   配置缓存策略--> 
		<property name="entityCacheStrategies">
			<props>
				<!--<prop key="com.vehicle.domain.Board">nonstrict-read-write,fixedRegion</prop>
				<prop key="com.vehicle.domain.User">nonstrict-read-write,freqChangeRegion</prop>
				<prop key="com.vehicle.domain.Topic">read-write,freqChangeRegion</prop>
				<prop key="com.vehicle.domain.Comment">read-write,freqChangeRegion</prop> 
				<prop key="com.vehicle.domain.Descr">read-write,freqChangeRegion</prop>-->
			</props>
		</property>
	</bean>
        
        <!--④ 定义HibernateTemplate-->
	<bean id="hibernateTemplate"
		class="org.springframework.orm.hibernate3.HibernateTemplate"
		 p:sessionFactory-ref="sessionFactory" />
</beans>
